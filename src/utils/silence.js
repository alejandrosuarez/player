let _cachedURL = null;

export const getSilenceURL = () => {
  if (!_cachedURL) {
    const rawMP3Bytes = hexToBytes(_RAW_SILENCE_MP3);
    const buffer = new ArrayBuffer(rawMP3Bytes.length);
    const bufferView = new DataView(buffer);

    for (let i = 0; i < rawMP3Bytes.length; i++) {
      bufferView.setUint8(i, rawMP3Bytes[i]);
    }

    _cachedURL = URL.createObjectURL(new Blob([buffer], { type: 'audio/mpeg' }));
  }

  return _cachedURL;
};

const hexToBytes = (s) =>
  s
    .split('\n')
    .join('')
    .match(/.{1,2}/g)
    .map((x) => parseInt(x, 16));

/**
 * An extremely short hex-encoded MP3 file containing only silence.
 */
const _RAW_SILENCE_MP3 = `
fffb7004000ff00000690000000800000d20000001000001a400000020000034800000044c414d45
332e39382e3455555555555555555555555555555555555555555555555555555555555555555555
4c414d45332e39382e34555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555555555fffb72047u48ff
00000690000000800000d20000001000001a40000002000003480000004555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555554c414d45332e3
9382e345555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
55555555555555555555555555555555555555555555555555555555555555555555555555555555
555555555555555555555555555555555555555555555555555555555555
`;
